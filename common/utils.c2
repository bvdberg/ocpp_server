module utils;

import stdio local;
import stdlib;
import libc_time local;

const u64 SecondsPerMinute = 60;
const u64 SecondsPerHour = 60 * SecondsPerMinute;
const u64 SecondsPerDay = 24 * SecondsPerHour;

public func void init() {
    stdlib.srand(cast<u32>(time(nil)));
}

public func u64 generateID() {
    u64 val = cast<u64>(stdlib.rand());
    val <<= 32;
    val |= cast<u64>(stdlib.rand());
    return val;
}

public func const char* getTime() {
    local char[40] buffer;
    Time now = time(nil);
    Tm* now2 = localtime(&now);
    sprintf(buffer, "%d-%02d-%02d %02d:%02d:%02d",
        now2.tm_year + 1900, now2.tm_mon + 1, now2.tm_mday,
        now2.tm_hour, now2.tm_min, now2.tm_sec);
    return buffer;
}

public func void addRfcDate(utils.StringBuffer* s, Time now) {
    Tm tm;
    gmtime_r(&now, &tm);

    char[120] outstr;
    // RFC 2822-compliant date format (with an English locale for %a and %b)
    if (strftime(outstr, sizeof(outstr), "%a, %d %b %Y %T GMT", &tm) == 0) {
        return;
    }
    s.add(outstr);
}

